*multichar-surround.txt*
*multichar-surround.nvim*

Edit multiple surrounding characters at once

==============================================================================
Usage                                                 *multichar-surround-usage*

The following assumes the plugin to be configured with default settings. See
|multichar-surround-configuration| for more info.

This is a very simple plugin which provides just one lua function intended to
be called by a keymap in visual mode. For example:
>lua
    vim.keymap.set("x", "S", function()
        require("multichar-surround").do_surround()
    end)
<
With this keymap, upon typing "S" in visual mode, you should be prompted on the
command line:

    Enter right pair:

If the function detects matching pairs of characters at both ends of your
visual selection, then they will be automatically filled into the prompt for
editing.

That is, if you select the text:
>lua
    ({ "Hello World!" })
<
then you should see the following after triggering `do_surround`:

    Enter right pair:" })

which you can edit as necessary:

    Enter right pair:']

and hit enter (<CR>) to apply the changes to the buffer:
>lua
    ['Hello world']
<
==============================================================================
Configuration                                 *multichar-surround-configuration*

You can configure the plugin by passing a table to the `setup()` function.
For example, if you wanted to redundantly override the default options with
the default values:
>lua
    require("multichar-surround").setup({
        -- the text to show when prompting the user for input
        prompt_text = "Edit right pair:",

        -- the highlight group to use for detected balanced pairs
        hl_group = "MatchParen",

        -- a list of pairs of mirrored characters to be used in
        -- detection/insertion of balanced pairs
        matching_pairs = {
            { "(", ")" }, { "[", "]" }, { "{", "}" }, { "<", ">" }
        },
    } --[[@as MulticharSurroundOpts]])
<
In `lazy.nvim`, you can (and should) use the `opts` field:
>lua
    {
        "cz875/multichar-surround.nvim",
        keys = {
            { mode = { "x" }, "S", function()
                require("multichar-surround").do_surround()
            end }
        },
        ---@type MulticharSurroundOpts
        opts = {
            -- the text to show when prompting the user for input
            prompt_text = "Edit right pair:",

            -- the highlight group to use for detected balanced pairs
            hl_group = "MatchParen",

            -- a list of pairs of mirrored characters to be used in
            -- detection/insertion of balanced pairs
            matching_pairs = {
                { "(", ")" }, { "[", "]" }, { "{", "}" }, { "<", ">" }
            },
        }
    }
<
That opts table is then automatically passed into the `setup()` function.

==============================================================================
 vim:tw=78:ts=2:et:ft=help:norl:
